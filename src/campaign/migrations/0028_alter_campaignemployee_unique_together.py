# Generated by Django 5.0.6 on 2024-07-09 18:35

from django.db import migrations
from django.db.models import Count
from django.db.models.functions import Concat


def delete_duplicate_campaign_employees(apps, schema_editor):
    # get the model from the versioned app registry
    CampaignEmployee = apps.get_model('campaign', 'CampaignEmployee')
    db_alias = schema_editor.connection.alias

    unqiue_campaign_employees = (
        CampaignEmployee.objects.using(db_alias)
        .values('campaign', 'employee')
        .annotate(count=Count(Concat('campaign', 'employee')))
        .all()
    )

    for unique_campaign_employee in unqiue_campaign_employees:
        if unique_campaign_employee['count'] > 1:
            duplicate_campaign_employees = (
                CampaignEmployee.objects.using(db_alias)
                .filter(
                    campaign=unique_campaign_employee['campaign'],
                    employee=unique_campaign_employee['employee'],
                )
                .order_by('-order__pk', '-pk')
                .all()
            )

            # we skip the first campaign employee - the one with an order or
            # the newest auto pk
            for duplicate_campaign_employee in duplicate_campaign_employees[1:]:
                # if the current campaign employee has an order we are dealing
                # with duplicates with orders which should be fixed manually, so
                # raise an exception
                if len(duplicate_campaign_employee.order_set.all()) > 0:
                    campaign_id = duplicate_campaign_employee.campaign_id
                    employee_id = duplicate_campaign_employee.employee_id
                    raise Exception(
                        'More than one CampaignEmployee with an order exists '
                        f'for campaign id {campaign_id} and employee id '
                        f'{employee_id}'
                    )
                else:
                    duplicate_campaign_employee.delete()


class Migration(migrations.Migration):
    dependencies = [
        ('campaign', '0027_employeegroupcampaign_displayed_currency_and_more'),
    ]

    operations = [
        # no reverse code since we cannot undo duplicate deletion
        migrations.RunPython(delete_duplicate_campaign_employees),
        migrations.AlterUniqueTogether(
            name='campaignemployee',
            unique_together={('campaign', 'employee')},
        ),
    ]
